<style>
  #yt-widget-full {
    background: linear-gradient(270deg, #66469c 0%, #274d9e 72%);
    padding: 32px 0;
    color: white;
  }

  #yt-widget-container {
    max-width: 1280px;
    margin: auto;
    padding: 0 16px;
  }

  .video-wrapper {
    display: flex;
    gap: 24px;
  }

  .main-video {
    flex: 2;
    display: flex;
    flex-direction: column;
  }

  .main-video iframe {
    width: 100%;
    height: 400px;
    border-radius: 12px;
    border: none;
    background: black;
  }

  .video-title {
    margin-top: 12px;
    font-size: 20px;
    font-weight: bold;
  }

  .video-list-container {
    flex: 1;
    display: flex;
    flex-direction: column;
    max-height: 400px;
    overflow: hidden;
  }

  .video-list {
    display: flex;
    flex-direction: column;
    gap: 16px;
    overflow-y: auto;
    padding-right: 4px;
    flex: 1;
  }

  .load-more-btn {
    background: #fff;
    color: #274d9e;
    font-weight: bold;
    border: none;
    border-radius: 6px;
    padding: 8px;
    margin-top: 8px;
    cursor: pointer;
    transition: background 0.3s;
  }

  .load-more-btn:hover {
    background: #ddd;
  }

  .video-card {
    display: flex;
    background: white;
    border-radius: 8px;
    overflow: hidden;
    cursor: pointer;
    color: #111;
    transition: 0.3s;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    min-height: 80px;
    height: auto;
  }

  .video-card img {
    width: 120px;
    height: 100%;
    object-fit: cover;
    background: transparent;
    flex-shrink: 0;
    padding: 0;
  }

  .video-card .video-info {
    padding: 8px;
    font-size: 13px;
    font-weight: bold;
    display: flex;
    align-items: center;
    line-height: 1.2em;
  }

  @media (max-width: 768px) {
    .video-wrapper {
      flex-direction: column;
    }

    .main-video iframe {
      height: 250px;
    }

    .video-list-container {
      max-height: none;
    }

    .video-card {
      flex-direction: column;
      height: auto;
    }

    .video-card img {
      width: 100%;
      height: 160px;
      object-fit: cover;
    }

    .video-card .video-info {
      padding: 8px;
      font-size: 13px;
    }
  }
</style>

<div id="yt-widget-full">
  <div id="yt-widget-container">
    <div class="video-wrapper">
      <!-- Sol Video Alanı -->
      <div class="main-video">
        <iframe id="mainVideo" allowfullscreen></iframe>
        <div class="video-title" id="mainTitle"></div>
      </div>

      <!-- Sağ Video Listesi -->
      <div class="video-list-container">
        <div class="video-list" id="videoList"></div>
        <button class="load-more-btn" id="loadMoreBtn" style="display:none;">Daha Fazla Yükle</button>
      </div>
    </div>
  </div>
</div>

<script>
  let allVideos = [];
  let currentIndex = 0;
  const videosPerPage = 4;

  async function loadYouTubeWidget() {
    const channelId = 'UCWvV6Th654v_QWWMneykATQ'; // Kanal ID
    const feedUrl = `https://www.youtube.com/feeds/videos.xml?channel_id=${channelId}`;
    const apiUrl = `https://api.rss2json.com/v1/api.json?rss_url=${encodeURIComponent(feedUrl)}`;

    const mainVideo = document.getElementById('mainVideo');
    const mainTitle = document.getElementById('mainTitle');
    const videoList = document.getElementById('videoList');
    const loadMoreBtn = document.getElementById('loadMoreBtn');

    try {
      const res = await fetch(apiUrl);
      if (!res.ok) {
        throw new Error(`HTTP ${res.status}`);
      }
      const data = await res.json();

      if (!data.items || data.items.length === 0) {
        videoList.innerHTML = '<p style="text-align:center;">Video bulunamadı.</p>';
        return;
      }

      // Shorts olmayanları filtrele (bazı Shorts linkleri /shorts içermeyebilir; isterseniz title veya duration ile de filtreleyin)
      allVideos = data.items.filter(video => !video.link.includes('/shorts/'));

      // İlk video ana video olarak
      const firstVideo = allVideos[0] || data.items[0];
      if (!firstVideo) {
        videoList.innerHTML = '<p style="text-align:center;">Video bulunamadı.</p>';
        return;
      }

      const videoIdFirst = extractVideoId(firstVideo.link);
      mainVideo.src = `https://www.youtube.com/embed/${videoIdFirst}`;
      mainTitle.textContent = firstVideo.title || '';

      currentIndex = 1; // İlk video gösterildi

      renderVideos();

      if (currentIndex < allVideos.length) {
        loadMoreBtn.style.display = 'block';
      }

      loadMoreBtn.addEventListener('click', renderVideos);

    } catch (e) {
      console.error('Video yüklenemedi:', e);
      const videoList = document.getElementById('videoList');
      videoList.innerHTML = '<p style="text-align:center;">Bir hata oluştu.</p>';
    }
  }

  function extractVideoId(url) {
    // watch?v=ID
    const m1 = url.match(/[?&]v=([^&]+)/);
    if (m1 && m1[1]) return m1[1];
    // youtu.be/ID
    const m2 = url.match(/youtu\.be\/([^?]+)/);
    if (m2 && m2[1]) return m2[1];
    // son çare: son path parçası
    try { return new URL(url).pathname.split('/').pop(); } catch { return url; }
  }

  function renderVideos() {
    const videoList = document.getElementById('videoList');
    const mainVideo = document.getElementById('mainVideo');
    const mainTitle = document.getElementById('mainTitle');
    const loadMoreBtn = document.getElementById('loadMoreBtn');

    const nextVideos = allVideos.slice(currentIndex, currentIndex + videosPerPage);

    nextVideos.forEach(video => {
      const videoId = extractVideoId(video.link);
      const thumbUrl = `https://img.youtube.com/vi/${videoId}/mqdefault.jpg`;

      const card = document.createElement('div');
      card.className = 'video-card';

      const img = document.createElement('img');
      img.src = thumbUrl;
      img.alt = video.title || '';

      const info = document.createElement('div');
      info.className = 'video-info';
      info.textContent = video.title || '';

      card.appendChild(img);
      card.appendChild(info);

      card.onclick = () => {
        mainVideo.src = `https://www.youtube.com/embed/${videoId}?autoplay=1`;
        mainTitle.textContent = video.title || '';
        // Üste kaydırmak isterseniz:
        // document.querySelector('.main-video').scrollIntoView({ behavior: 'smooth' });
      };

      videoList.appendChild(card);
    });

    currentIndex += nextVideos.length;

    // Daha fazla video kalmadıysa butonu gizle
    if (currentIndex >= allVideos.length) {
      loadMoreBtn.style.display = 'none';
    }
  }

  loadYouTubeWidget();
</script>

